local transf = require "transf"
local ParamBuilder = require "parambuilder_v1_1"
local constructionutil = require "constructionutil"
local positionx = ParamBuilder.Slider("offsetx", _("offset x-axis"), ParamBuilder.rangeSymm(1,0.01), 1/0.01, _("jrm_param_offsetx_tooltip") )
local model_icons = {
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_db06@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_db73@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_db80@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_db94@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_fs@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_hupac06@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_hupac73@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_hupac90@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_novatrans@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_novatrans2@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_novatrans06@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_novatrans80@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_oebb@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_oebb2@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_sati@2x.tga",
						"ui/models_small/vehicle/waggon/t1_taschenwagen/t1_segi@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_aae@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_db@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_db2@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_dsb@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_hupac@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_hupac06@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_kombiwaggon@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_oebb@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_oebb06@2x.tga",
						"ui/models_small/vehicle/waggon/t3_taschenwagen/t3_sj@2x.tga",
					}
local model_values = {
						"asset/t1_taschenwagen/t1_db06.mdl",
						"asset/t1_taschenwagen/t1_db73.mdl",
						"asset/t1_taschenwagen/t1_db80.mdl",
						"asset/t1_taschenwagen/t1_db94.mdl",
						"asset/t1_taschenwagen/t1_fs.mdl",
						"asset/t1_taschenwagen/t1_hupac06.mdl",
						"asset/t1_taschenwagen/t1_hupac73.mdl",
						"asset/t1_taschenwagen/t1_hupac90.mdl",
						"asset/t1_taschenwagen/t1_novatrans.mdl",
						"asset/t1_taschenwagen/t1_novatrans2.mdl",
						"asset/t1_taschenwagen/t1_novatrans06.mdl",
						"asset/t1_taschenwagen/t1_novatrans80.mdl",
						"asset/t1_taschenwagen/t1_oebb.mdl",
						"asset/t1_taschenwagen/t1_oebb2.mdl",
						"asset/t1_taschenwagen/t1_sati.mdl",
						"asset/t1_taschenwagen/t1_segi.mdl",
						"asset/t3_taschenwagen/t3_aae.mdl",
						"asset/t3_taschenwagen/t3_db.mdl",
						"asset/t3_taschenwagen/t3_db2.mdl",
						"asset/t3_taschenwagen/t3_dsb.mdl",
						"asset/t3_taschenwagen/t3_hupac.mdl",
						"asset/t3_taschenwagen/t3_hupac06.mdl",
						"asset/t3_taschenwagen/t3_kombiwaggon.mdl",
						"asset/t3_taschenwagen/t3_oebb.mdl",
						"asset/t3_taschenwagen/t3_oebb06.mdl",
						"asset/t3_taschenwagen/t3_sj.mdl",
					}
local model_beladen_values = {

							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_ambrosetti.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_asg.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_avandero.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_beck.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_bernasconi.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_blank1.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_blank2.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_blank3.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_blank4.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_danzas.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_danzas2.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_danzas3.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_danzas4.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_fercam.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_gondrand.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_gradLinz.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_laghi.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_laghi2.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_merzario.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_novatrans.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_transdanubia.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_virtbauer.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt_wetram.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_blank1.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_blank2.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_blank3.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_blank4.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_calberson.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_fransMaas.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_frikus.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_guyon.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_hamburger.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_kassbohrer.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_keul.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_koch.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_kuhne.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_malenstein.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_novatrans.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_panalpina.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_rouch.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_schenker.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_wohlfahrt.mdl",
							"asset/trailer_mw/trailerAlt_typ80s/beladung/trailerAlt2_wohlfahrt2.mdl",
							----
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_berger.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_depaire.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_dfds.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_kieserling.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_lkwAugustin.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_scansped.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt2_stadler.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_asg2.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_danzas.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_danzas2.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_danzas3.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_depaire.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_ert.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_europa.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_europatrans.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_fercam.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_gruber.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_gruber2.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_gruber3.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_hangartner.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_lkwWalter.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_merikiito.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_nordisk.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_oy.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_polarExpress.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_rentco.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_rosch.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_sae.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_sae2.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_satatrans.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_scancargo.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_schenker.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_schenkerSweden.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_trailerlloyd.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_wetron.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_williBetz.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_winner.mdl",
							----
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_belgian.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_blank.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_deutrans.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_kline.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_mol.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCti/containerCTI_cti.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCti/containerCTI_danzas.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCti/containerCTI_icsu.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db1.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db3.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_dbBraun.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_act.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_cti.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_delmas.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_deutrans.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_deutrans2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_isover.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_johnson.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_schenker.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_sillan.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_bremer.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_contrans.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_contrans2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_hapag.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_ocl.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_acl.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_act.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_act2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_act3.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_cunard.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_hapag.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_holland.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerOld/containerOld_maersk.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCool/containerCool_belgian.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCool/containerCool_contrans.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCool/containerCool_eiskrem.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCool/containerCool_interfrigoAlt.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCool/containerCool_interfrigoNeu.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_columbus.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_columbus2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_hamburg.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_hamburg2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerInterfrigo/containerInterfrigo_if1.mdl",
							----
							"asset/container_jay/container60s70s/container_40ft/containerRibbed40/containerRibbed40_acl.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerRibbed40/containerRibbed40_cti.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerDB/containerDB_db.mdl",
							"asset/container_nando/container_40ft/repaints_jay_60s70s/container_40ft_mol.mdl",
							"asset/container_nando/container_40ft/repaints_jay_60s70s/container_40ft_polar.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerGlatt/container40Old_hapag.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerGlatt/container40Old_ocl.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerGlatt/container40Old_seatrain.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_belgian.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_hapag.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_icsu.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_maersk.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_sealand.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_sealand2.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerOld/container40Old_usLines.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerInterfrigo/container40Interfrigo_white.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerInterfrigo/container40Interfrigo_blue.mdl",
							----
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_alianca.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_choYangNeu.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_cosco.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_danzas.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_florens.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_klineNeu.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_nedlloyd.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_oocl.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_tex.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_tiphook.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_yml.mdl",
							"asset/container_nando/container_20ft/repaints_jay_80s90s/doubleSided/container_20ftDouble_zim.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerCti/containerCti_iccu.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerCti/containerCti_ym.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerDB/containerDB_dbAlt.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerDB/containerDB_tfgBraun.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerDB/containerDB_tfgBlau.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_cast.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_choYang.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_contrans.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_coscoAlt.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_genstar.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_ocl.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerRibbed/containerRibbed_xtra.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_kline.mdl",
							"asset/container_nando/container_20ft/repaints_jay_60s70s/doubleSided/container_20ftDouble_mol.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCti/containerCTI_cti.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerCti/containerCTI_danzas.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db1.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_db3.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerDB/containerDB_dbBraun.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_act.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_cti.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_delmas.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_deutrans.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerRibbed/containerRibbed_deutrans2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_contrans.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerGlatt/containerGlatt_contrans2.mdl",
							"asset/container_nando/container_20ft/container_20ft_po.mdl",
							"asset/container_nando/container_20ft/container_20ft_hl.mdl",
							"asset/container_nando/container_20ft/container_20ft_evergreen.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerReefer/containerReefer_cosco.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerReefer/containerReefer_hapag.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerReefer/containerReefer_kline.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerReefer/containerReefer_mol.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_act.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_alianca.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_bsl.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_nedlloyd.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_ocl.mdl",
							"asset/container_jay/container80s90s/container_20ft/containerHole/containerHole_po.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_columbus.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_columbus2.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_hamburg.mdl",
							"asset/container_jay/container60s70s/container_20ft/containerHole/containerHole_hamburg2.mdl",
							----
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_alianca.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_cai.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_cosco.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_delmas.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_florens.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_hamburgAlt.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_hyundai.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_kline.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_nedlloyd.mdl",
							"asset/container_nando/container_40ft/repaints_jay_80s90s/container_40ft_oocl.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerGlatt/container40Old_contrans.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerGlatt/container40Old_hapagWeiss.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerGlatt/container40Old_nyk.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerGlatt/container40Old_seatrainEx.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerOld/container40Old_seaLandNew.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerRibbed40/containerRibbed40_bell.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerRibbed40/containerRibbed40_cast.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerRibbed40/containerRibbed40_evergreenAlt.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerRibbed40/containerRibbed40_hanjinAlt.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerRibbed40/containerRibbed40_kienHung.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerGlatt/container40Old_ocl.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerGlatt/container40Old_seatrain.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerRibbed40/containerRibbed40_acl.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerRibbed40/containerRibbed40_cti.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerDB/containerDB_db.mdl",
							"asset/container_nando/container_40ft/repaints_jay_60s70s/container_40ft_mol.mdl",
							"asset/container_nando/container_40ft/container_40ft_po.mdl",
							"asset/container_nando/container_40ft/container_40ft_hl.mdl",
							"asset/container_nando/container_40ft/container_40ft_evergreen.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerReeferOld/containerReeferOld_acl.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerReeferOld/containerReeferOld_hapag.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerReeferOld/containerReeferOld_maersk.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerReeferOld/containerReeferOld_seaLand.mdl",
							"asset/container_jay/container80s90s/container_40ft/containerReeferOld/containerReeferOld_oocl.mdl",
							"asset/container_jay/container60s70s/container_40ft/containerInterfrigo/container40Interfrigo_blue.mdl",
							----
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_audi.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_audi2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_bahntrans.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_bauhaus.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_bertschi.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_bertschi2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_bertschi3.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_blank1.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_blank2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_blank3.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_blank4.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_cargex.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_danzas.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_danzas2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_danzas3.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_dbKraft.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_dreier.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_dreier2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_dsbGods.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_eat.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_eberspacher.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_fenthols.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_fercam.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_foery.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_frey.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_giezendanner.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_giezendanner2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_hangartner.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_hangartner2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_hangartner3.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_jeschke.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_kieserling.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_kunze.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_lauritzen.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_leimgruber.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_lkwWalter.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_malenstein.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_oebbAudi.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_oebbHaus.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_panalpina.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_planzerBlau.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_planzerRot.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_rhenus.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_rosch.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_sae.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_schenker.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_senn.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_skandinavisk.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_skandinavisk2.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_skandiRot.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_vos.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_weichelt.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_winner.mdl",
							"asset/container_jay/pritschen/pritschenAlt/beladung/pritscheAlt_wohlfahrt.mdl",
							---		
							"asset/container_mw/container_20ft/container_20ft_apl.mdl",
							"asset/container_mw/container_20ft/container_20ft_cai.mdl",
							"asset/container_mw/container_20ft/container_20ft_china_shipping.mdl",
							"asset/container_mw/container_20ft/container_20ft_cma_cgm.mdl",
							"asset/container_mw/container_20ft/container_20ft_cma_cgm2.mdl",
							"asset/container_mw/container_20ft/container_20ft_cosco.mdl",
							"asset/container_mw/container_20ft/container_20ft_eimskip.mdl",
							"asset/container_mw/container_20ft/container_20ft_eimskip2.mdl",
							"asset/container_mw/container_20ft/container_20ft_evergreen.mdl",
							"asset/container_mw/container_20ft/container_20ft_geseaco.mdl",
							"asset/container_mw/container_20ft/container_20ft_hamburg_sued.mdl",
							"asset/container_mw/container_20ft/container_20ft_hanjin.mdl",
							"asset/container_mw/container_20ft/container_20ft_hapag_lloyd.mdl",
							"asset/container_mw/container_20ft/container_20ft_hyundai.mdl",
							"asset/container_mw/container_20ft/container_20ft_maersk.mdl",
							"asset/container_mw/container_20ft/container_20ft_mol.mdl",
							"asset/container_mw/container_20ft/container_20ft_msc.mdl",
							"asset/container_mw/container_20ft/container_20ft_one.mdl",
							"asset/container_mw/container_20ft/container_20ft_one2.mdl",
							"asset/container_mw/container_20ft/container_20ft_oocl.mdl",
							"asset/container_mw/container_20ft/container_20ft_po_nedlloyd.mdl",
							"asset/container_mw/container_20ft/container_20ft_tex.mdl",
							"asset/container_mw/container_20ft/container_20ft_triton.mdl",
							"asset/container_mw/container_20ft/container_20ft_uasc.mdl",
							"asset/container_mw/container_20ft/container_20ft_yang_ming.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_bruhn.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_dhl.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett2.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett3.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_hamburg_sued.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_hanjin.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_maersk.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_mol.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_msc.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_one.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_seaco.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_china_shipping.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_eimskip.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_evergreen.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_hamburg_sued.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_hapag_lloyd.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_maersk.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_mol.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_msc.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_triton.mdl",
							---
							"asset/trailer_mw/krone_profiliner/krone_trailer_ansorge.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_arcese.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_cldn.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_dsv.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_ewals.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_fercam.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_ferrymasters.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_fixemer.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_gruber.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_hangartner.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_heisterkamp.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_heisterkamp2.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_hhbode.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_iemoli.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_ikg.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_jost.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_lauritzen.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_nothegger.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_paneuropa.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_sae.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_schenker.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_transco.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_walter.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_wenzel.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_wetron.mdl",
							"asset/trailer_mw/krone_profiliner/krone_trailer_winner.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_sae.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_wetron.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_winner.mdl",
							"asset/trailer_mw/trailerAlt_typ90s/beladung/trailerAlt3_gruber3.mdl",
							---
							"asset/container_mw/container_20ft/container_20ft_apl.mdl",
							"asset/container_mw/container_20ft/container_20ft_cai.mdl",
							"asset/container_mw/container_20ft/container_20ft_china_shipping.mdl",
							"asset/container_mw/container_20ft/container_20ft_cma_cgm.mdl",
							"asset/container_mw/container_20ft/container_20ft_cma_cgm2.mdl",
							"asset/container_mw/container_20ft/container_20ft_cosco.mdl",
							"asset/container_mw/container_20ft/container_20ft_eimskip.mdl",
							"asset/container_mw/container_20ft/container_20ft_eimskip2.mdl",
							"asset/container_mw/container_20ft/container_20ft_evergreen.mdl",
							"asset/container_mw/container_20ft/container_20ft_geseaco.mdl",
							"asset/container_mw/container_20ft/container_20ft_hamburg_sued.mdl",
							"asset/container_mw/container_20ft/container_20ft_hanjin.mdl",
							"asset/container_mw/container_20ft/container_20ft_hapag_lloyd.mdl",
							"asset/container_mw/container_20ft/container_20ft_hyundai.mdl",
							"asset/container_mw/container_20ft/container_20ft_maersk.mdl",
							"asset/container_mw/container_20ft/container_20ft_mol.mdl",
							"asset/container_mw/container_20ft/container_20ft_msc.mdl",
							"asset/container_mw/container_20ft/container_20ft_one.mdl",
							"asset/container_mw/container_20ft/container_20ft_one2.mdl",
							"asset/container_mw/container_20ft/container_20ft_oocl.mdl",
							"asset/container_mw/container_20ft/container_20ft_po_nedlloyd.mdl",
							"asset/container_mw/container_20ft/container_20ft_tex.mdl",
							"asset/container_mw/container_20ft/container_20ft_triton.mdl",
							"asset/container_mw/container_20ft/container_20ft_uasc.mdl",
							"asset/container_mw/container_20ft/container_20ft_yang_ming.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_bruhn.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_dhl.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett2.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_ett3.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_hamburg_sued.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_hanjin.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_maersk.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_mol.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_msc.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_one.mdl",
							"asset/container_mw/container_20ft_hc/container_20ft_hc_seaco.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_china_shipping.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_eimskip.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_evergreen.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_hamburg_sued.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_hapag_lloyd.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_maersk.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_mol.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_msc.mdl",
							"asset/container_mw/container_20ft_ot/container_20ft_ot_triton.mdl",
							---
							"asset/container_mw/container_40ft/container_40ft_apl.mdl",
							"asset/container_mw/container_40ft/container_40ft_cai.mdl",
							"asset/container_mw/container_40ft/container_40ft_cai2.mdl",
							"asset/container_mw/container_40ft/container_40ft_china_shipping.mdl",
							"asset/container_mw/container_40ft/container_40ft_cma_cgm.mdl",
							"asset/container_mw/container_40ft/container_40ft_cma_cgm2.mdl",
							"asset/container_mw/container_40ft/container_40ft_cma_cgm3.mdl",
							"asset/container_mw/container_40ft/container_40ft_cosco.mdl",
							"asset/container_mw/container_40ft/container_40ft_db.mdl",
							"asset/container_mw/container_40ft/container_40ft_dhl.mdl",
							"asset/container_mw/container_40ft/container_40ft_eimskip.mdl",
							"asset/container_mw/container_40ft/container_40ft_evergreen.mdl",
							"asset/container_mw/container_40ft/container_40ft_geseaco.mdl",
							"asset/container_mw/container_40ft/container_40ft_global_container.mdl",
							"asset/container_mw/container_40ft/container_40ft_hamburg_sued.mdl",
							"asset/container_mw/container_40ft/container_40ft_hamburg_sued2.mdl",
							"asset/container_mw/container_40ft/container_40ft_hanjin.mdl",
							"asset/container_mw/container_40ft/container_40ft_hapag_lloyd.mdl",
							"asset/container_mw/container_40ft/container_40ft_hyundai.mdl",
							"asset/container_mw/container_40ft/container_40ft_maersk.mdl",
							"asset/container_mw/container_40ft/container_40ft_mol.mdl",
							"asset/container_mw/container_40ft/container_40ft_msc.mdl",
							"asset/container_mw/container_40ft/container_40ft_msc2.mdl",
							"asset/container_mw/container_40ft/container_40ft_one.mdl",
							"asset/container_mw/container_40ft/container_40ft_one2.mdl",
							"asset/container_mw/container_40ft/container_40ft_oocl.mdl",
							"asset/container_mw/container_40ft/container_40ft_po_nedlloyd.mdl",
							"asset/container_mw/container_40ft/container_40ft_tex.mdl",
							"asset/container_mw/container_40ft/container_40ft_triton.mdl",
							"asset/container_mw/container_40ft/container_40ft_uasc.mdl",
							"asset/container_mw/container_40ft/container_40ft_yang_ming.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_apl.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cai.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cai2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_china_shipping.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cma_cgm.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cma_cgm2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cma_cgm3.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_cosco.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_dhl.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_dhl2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_eimskip.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_eimskip2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_eucon.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_evergreen.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_geseaco.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_hamburg_sued.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_hamburg_sued2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_hanjin.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_hapag_lloyd.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_hyundai.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_maersk.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_mol.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_msc.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_msc2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_one.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_one2.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_oocl.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_po_nedlloyd.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_tex.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_triton.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_uasc.mdl",
							"asset/container_mw/container_40ft_hc/container_40ft_hc_yang_ming.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_evergreen.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_hamburg_sued.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_hapag_lloyd.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_maersk.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_msc.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_po.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_po_nedlloyd.mdl",
							"asset/container_mw/container_40ft_ot/container_40ft_ot_yang_ming.mdl",
							----
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_bursped.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_cargoline.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_dachser.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_dhl.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_dhl2.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_dpd.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_dreier.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_gls.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_hellmann.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_ids.mdl",
							"asset/container_mw/wechselbruecke_24ft/wechselbruecke_24ft_schenker.mdl",
							----
							"vehicle/waggon/t3_taschenwagen/zapfen/stuetzbock.mdl",
							"vehicle/waggon/t3_taschenwagen/zapfen/stuetzbock_laden.mdl",
							----
							"vehicle/waggon/t1_taschenwagen/zapfen/zapfen_20ft.mdl",
							"vehicle/waggon/t1_taschenwagen/zapfen/zapfen_40ft.mdl",
							---
							"vehicle/waggon/t3_taschenwagen/zapfen/zapfen_40ft.mdl",
							"vehicle/waggon/t3_taschenwagen/zapfen/zapfen_20ft.mdl",
							"vehicle/waggon/t3_taschenwagen/zapfen/zapfen_20_26ft.mdl",							
					}	
local assetmodel = ParamBuilder.IconButton("type_param", _("vehicle"), model_icons, model_values, 1, _("jrm_param_type_tooltip") )

function data()

return { 
	type = "ASSET_TRACK",
	description = {
			name = _("mod_name"),
	},
	availability =
	{
			yearFrom = 1973,
			yearTo = 0,
	},
	buildMode = "MULTI",
	categories = { "tracks", "jays_mods" },
	order = -2046867593,
	skipCollision = true,
	autoRemovable = false,
	params = {
		{
			key = "position",
			name = _("height"),
			uiType = "BUTTON",
			values = { _("ground"), _("rail") },
			tooltip = _("height_tooltip"),
			defaultIndex = 1,
		},
		{
			key = "beladenT1T3",
			name = _("Beladung"),
			uiType = "BUTTON",
			values = { _("assetVariante_1"), _("assetVariante_2"), _("assetVariante_3"), _("assetVariante_4"), _("assetVariante_5") },
			defaultIndex = 1,
		},
		positionx.params,
		assetmodel.params,
	},
	updateFn = function(params)
		local trax = positionx.getValue(params)
		local height = 0
		if params.position == 1 then
			height = 1.05
		end
		
	local result = { }
	result.models = { }

		if params.beladenT1T3 == 0 then
			---1973
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_segi.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db94.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_fs.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac90.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans2.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_sati.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb2.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1.2 + trax, 0, 0 + height, 1, }),} )		
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_aae.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_dsb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_kombiwaggon.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_sj.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db2.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb06.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.2 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
				end
			end
		if params.beladenT1T3 == 1 then
			---1973
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_segi.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Load
				table.insert(result.models, {id = model_beladen_values[math.random(1, 43)],
				transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -1 + trax, 0, 0.30000001192093 + height, 1, }),} )		
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2.4 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db94.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_fs.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac90.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans2.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_sati.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
				table.insert(result.models, {id = model_beladen_values[math.random(1, 78)],
				transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -1 + trax, 0, 0.30000001192093 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2.4 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb2.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(333,358)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -0.7 + trax, 0, 0.30000001192093 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2.4 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_aae.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_dsb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_kombiwaggon.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_sj.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(44, 78)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -1 + trax, 0, 0.30000001192093 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2.91 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db2.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb06.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
				table.insert(result.models, {id = model_beladen_values[math.random(333,358)],
				transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -0.7 + trax, 0, 0.30000001192093 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2.4 + trax, 0, 0 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
				end
			end
			--- Pritschen
		if params.beladenT1T3 == 2 then
			---1973
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_segi.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Load
			table.insert(result.models, {id = model_beladen_values[math.random(240, 243)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(240, 243)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db94.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_fs.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac90.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans2.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_sati.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(233, 286)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(233, 286)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )			
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb2.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(480, 490)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(480, 490)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_aae.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_dsb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_kombiwaggon.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_sj.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(233, 286)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -3.8499999046326 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(233, 286)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 4.5300002098083 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[497],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -12.119999885559 + height, 1,}),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )	
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db2.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb06.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(480, 490)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -3.8499999046326 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(480, 490)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 4.5300002098083 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[497],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -12.119999885559 + height, 1,}),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
				end
			end
			--- Container
					if params.beladenT1T3 == 3 then
			---1973
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_segi.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Load
			table.insert(result.models, {id = model_beladen_values[math.random(86, 124)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(86, 124)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db94.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_fs.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac90.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans2.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_sati.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(142, 165)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(142, 165)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )			
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb2.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(287, 332)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, -3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(287, 332)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 3.7200000286102 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[493],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -1.8099999427795 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_aae.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_dsb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_kombiwaggon.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_sj.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(142, 165)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -3.8499999046326 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(142, 165)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 4.5300002098083 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[497],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -12.119999885559 + height, 1,}),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )	
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db2.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb06.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(287, 332)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -3.8499999046326 + trax, 0, 1.2699999809265 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[math.random(287, 332)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 4.5300002098083 + trax, 0, 1.2699999809265 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[497],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -12.119999885559 + height, 1,}),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
				end
			end
			
			--- Container 40ft
			if params.beladenT1T3 == 4 then
			---1973
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_segi.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Load
			table.insert(result.models, {id = model_beladen_values[math.random(130, 141)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, 1.289999961853 + height, 1, }),} )					
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1.2 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db94.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_fs.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac73.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac90.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans2.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans80.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_sati.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(198, 217)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, 1.289999961853 + height, 1, }),} )						
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1.2 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_db06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_novatrans06.mdl"
			or assetmodel.getValue(params) == "asset/t1_taschenwagen/t1_oebb2.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(409, 479)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, 1.289999961853 + height, 1, }),} )					
			table.insert(result.models, {id = model_beladen_values[494],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -3.2000000476837 + height, 1, }),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1.2 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_aae.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_dsb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_kombiwaggon.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_sj.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(198, 217)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.34999999403954 + trax, 0, 1.25 + height, 1, }),} )						
			table.insert(result.models, {id = model_beladen_values[495],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -4.9400000572205 + height, 1,}),} )	
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )	
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
			end
			if assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db2.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_db.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_hupac06.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb.mdl"
			or assetmodel.getValue(params) == "asset/t3_taschenwagen/t3_oebb06.mdl"
			then
				table.insert(result.models, {id = assetmodel.getValue(params),transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, trax, 0, height, 1 }),} )	
				---Cars
			table.insert(result.models, {id = model_beladen_values[math.random(409, 479)],
			transf = constructionutil.rotateTransf(params, { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.34999999403954 + trax, 0, 1.25 + height, 1, }),} )				
			table.insert(result.models, {id = model_beladen_values[495],
			transf = constructionutil.rotateTransf(params, {  1, 0, 0, 0, -0, 1, 0, 0, 0, -0, 1, 0, 0 + trax, 0, -4.9400000572205 + height, 1,}),} )		
			table.insert(result.models, {id = model_beladen_values[491],
			transf = constructionutil.rotateTransf(params, { 1, 0, -0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.14 + trax, 0, 0 + height, 1, }),} )				
				result.terrainAlignmentLists = { {
					type = "EQUAL",
					faces =  { }
						} }
		result.groundFaces = { }
		result.groundFaces[#result.groundFaces + 1] = { face = { {0.01, -0.01}, { 0.01, 0.01}, {-0.01, 0.01}, {-0.01, -0.01} }, modes = { { type = "FILL", key = "industry_floor.lua" } } }
				return result
				end
			end
	end		
}

end